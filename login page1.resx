<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>